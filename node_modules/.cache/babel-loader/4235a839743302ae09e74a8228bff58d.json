{"ast":null,"code":"var _jsxFileName = \"/home/matteo/Documents/Programmazione/progettiRubati/ToDo-List---React/src/Components/SingleTodo.js\";\n\n/* \nDescription: Handles the creation of each line-item, calls the strike-through text function\n*/\n//Scripts:\nimport React, { Component } from 'react';\nimport EditButton from './EditButton.js';\nimport RemoveButton from './RemoveButton.js'; //Styling:\n\nimport './SingleToDo.css';\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.props.handleComplete(this.props.id);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        item: event.target.value\n      });\n    };\n\n    this.handleEditSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.item !== \"\") {\n        const editedItem = {\n          id: this.props.id,\n          item: this.state.item\n        };\n        this.props.editItem(editedItem);\n        this.setState({\n          item: \"\"\n        });\n      } else {\n        this.setState({\n          item: this.props.item\n        });\n      }\n    };\n\n    this.state = {\n      item: this.props.item,\n      id: ''\n    };\n  } //Adds strikethrough text upon clicking line-item\n\n\n  render() {\n    //CSS Variables\n    const evenRowCond = this.props.index % 2 === 0 ? \"evenRowCond\" : \"\";\n    const completeCond = this.props.complete ? \"completeCond\" : \"\"; //React Variables\n\n    const itemFormatted = !this.props.editing ? React.createElement(\"span\", {\n      className: \"lineRowText\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.index + 1, \".\"), \" \", React.createElement(\"span\", {\n      className: completeCond,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.item)) : React.createElement(\"span\", {\n      className: \"editing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.index + 1, \".\\xA0\\xA0\", React.createElement(\"form\", {\n      onSubmit: this.handleEditSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"editingForm\",\n      onChange: this.handleChange,\n      type: \"text\",\n      id: \"todo Input Edit\",\n      name: \"item\",\n      value: this.state.item,\n      placeholder: \"Edit Item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n    const userInputLabel = React.createElement(\"label\", {\n      htmlFor: \"todo Input Edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n    const removeButton = React.createElement(RemoveButton, {\n      handleDelete: this.props.handleDelete,\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n    const editButton = React.createElement(EditButton, {\n      handleEditClick: this.props.handleEditClick,\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: `itemRow ${evenRowCond}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, itemFormatted, editButton, removeButton);\n  }\n\n}\n\nexport default Edit;","map":{"version":3,"sources":["/home/matteo/Documents/Programmazione/progettiRubati/ToDo-List---React/src/Components/SingleTodo.js"],"names":["React","Component","EditButton","RemoveButton","Edit","constructor","props","handleClick","handleComplete","id","handleChange","event","setState","item","target","value","handleEditSubmit","preventDefault","state","editedItem","editItem","render","evenRowCond","index","completeCond","complete","itemFormatted","editing","userInputLabel","removeButton","handleDelete","editButton","handleEditClick"],"mappings":"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","sourcesContent":["/* \nDescription: Handles the creation of each line-item, calls the strike-through text function\n*/\n\n//Scripts:\nimport React, { Component } from 'react';\nimport EditButton from './EditButton.js';\nimport RemoveButton from './RemoveButton.js';\n\n//Styling:\nimport './SingleToDo.css';\n\nclass Edit extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      item : this.props.item,\n      id : '',\n    }\n  }  \n\n  //Adds strikethrough text upon clicking line-item\n  handleClick = () => {\n    this.props.handleComplete(this.props.id)\n  }\n  //Handle user inputting data while editing\n  //Not sure if this should actually be handled via FORM in order to have DRY code\n  handleChange = (event) => {\n    this.setState({\n        item : event.target.value,\n    });\n  }\n  //Handles submission of a line-item edit\n  handleEditSubmit = (event) => {\n    event.preventDefault();\n    if(this.state.item !== \"\") {            \n      const editedItem = { \n        id : this.props.id,\n        item : this.state.item,\n      };\n      this.props.editItem(editedItem);\n      this.setState({ item : \"\", })\n     } \n      else {this.setState({ item : this.props.item})}     \n  }\n\n  render() {\n    //CSS Variables\n    const evenRowCond = this.props.index % 2 === 0 ? \"evenRowCond\" : \"\";\n    const completeCond = this.props.complete ? \"completeCond\" : \"\";\n    //React Variables\n    const itemFormatted = !this.props.editing \n      ? <span className={\"lineRowText\"} onClick={this.handleClick}><span>{this.props.index+1}.</span> <span className={completeCond}>{this.props.item}</span></span> \n      : <span className=\"editing\">{this.props.index+1}.&nbsp;&nbsp;<form onSubmit={this.handleEditSubmit}><input className=\"editingForm\" onChange={this.handleChange} type=\"text\" id=\"todo Input Edit\" name=\"item\" value={this.state.item} placeholder=\"Edit Item\"></input></form></span> ;\n      const userInputLabel = <label htmlFor=\"todo Input Edit\"></label>;\n    const removeButton = <RemoveButton handleDelete={this.props.handleDelete} id={this.props.id} />;\n    const editButton = <EditButton handleEditClick={this.props.handleEditClick} id={this.props.id} />;\n    \n    return(\n    <div className={`itemRow ${evenRowCond}`}  > \n        {itemFormatted}{editButton}{removeButton}\n    </div>\n    )\n  }\n}\nexport default Edit;"]},"metadata":{},"sourceType":"module"}