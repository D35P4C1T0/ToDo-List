{"ast":null,"code":"var _jsxFileName = \"/home/matteo/Documents/Programmazione/progettiRubati/ToDo-List---React/src/Components/SingleTodo.js\";\n\n/* \nDescription: Handles the creation of each line-item, calls the strike-through text function\n*/\n//Scripts:\nimport React, { Component } from \"react\";\nimport EditButton from \"./EditButton.js\";\nimport RemoveButton from \"./RemoveButton.js\"; //Styling:\n\nimport \"./SingleToDo.css\";\nimport \"./style/dark.min.css\";\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.props.handleComplete(this.props.id);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        item: event.target.value\n      });\n    };\n\n    this.handleEditSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.item !== \"\") {\n        const editedItem = {\n          id: this.props.id,\n          item: this.state.item\n        };\n        this.props.editItem(editedItem);\n        this.setState({\n          item: \"\"\n        });\n      } else {\n        this.setState({\n          item: this.props.item\n        });\n      }\n    };\n\n    this.state = {\n      item: this.props.item,\n      id: \"\"\n    };\n  } //Adds strikethrough text upon clicking line-item\n\n\n  render() {\n    //CSS Variables\n    const evenRowCond = this.props.index % 2 === 0 ? \"evenRowCond\" : \"\";\n    const completeCond = this.props.complete ? \"completeCond\" : \"\"; //React Variables\n\n    const itemFormatted = !this.props.editing ? React.createElement(\"span\", {\n      className: \"lineRowText\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.index + 1, \".\"), \" \", React.createElement(\"span\", {\n      className: completeCond,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.item)) : React.createElement(\"span\", {\n      className: \"editing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.index + 1, \".\\xA0\\xA0\", React.createElement(\"form\", {\n      onSubmit: this.handleEditSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"editingForm\",\n      onChange: this.handleChange,\n      type: \"text\",\n      id: \"todo Input Edit\",\n      name: \"item\",\n      value: this.state.item,\n      placeholder: \"Edit Item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n    const userInputLabel = React.createElement(\"label\", {\n      htmlFor: \"todo Input Edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n    const removeButton = React.createElement(RemoveButton, {\n      handleDelete: this.props.handleDelete,\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    });\n    const editButton = React.createElement(EditButton, {\n      handleEditClick: this.props.handleEditClick,\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: `itemRow ${evenRowCond}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, itemFormatted, editButton, removeButton);\n  }\n\n}\n\nexport default Edit;","map":{"version":3,"sources":["/home/matteo/Documents/Programmazione/progettiRubati/ToDo-List---React/src/Components/SingleTodo.js"],"names":["React","Component","EditButton","RemoveButton","Edit","constructor","props","handleClick","handleComplete","id","handleChange","event","setState","item","target","value","handleEditSubmit","preventDefault","state","editedItem","editItem","render","evenRowCond","index","completeCond","complete","itemFormatted","editing","userInputLabel","removeButton","handleDelete","editButton","handleEditClick"],"mappings":"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","sourcesContent":["/* \nDescription: Handles the creation of each line-item, calls the strike-through text function\n*/\n\n//Scripts:\nimport React, { Component } from \"react\"\nimport EditButton from \"./EditButton.js\"\nimport RemoveButton from \"./RemoveButton.js\"\n\n//Styling:\nimport \"./SingleToDo.css\"\nimport \"./style/dark.min.css\"\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      item: this.props.item,\n      id: \"\"\n    }\n  }\n\n  //Adds strikethrough text upon clicking line-item\n  handleClick = () => {\n    this.props.handleComplete(this.props.id)\n  }\n  //Handle user inputting data while editing\n  //Not sure if this should actually be handled via FORM in order to have DRY code\n  handleChange = event => {\n    this.setState({\n      item: event.target.value\n    })\n  }\n  //Handles submission of a line-item edit\n  handleEditSubmit = event => {\n    event.preventDefault()\n    if (this.state.item !== \"\") {\n      const editedItem = {\n        id: this.props.id,\n        item: this.state.item\n      }\n      this.props.editItem(editedItem)\n      this.setState({ item: \"\" })\n    } else {\n      this.setState({ item: this.props.item })\n    }\n  }\n\n  render() {\n    //CSS Variables\n    const evenRowCond = this.props.index % 2 === 0 ? \"evenRowCond\" : \"\"\n    const completeCond = this.props.complete ? \"completeCond\" : \"\"\n    //React Variables\n    const itemFormatted = !this.props.editing ? (\n      <span className={\"lineRowText\"} onClick={this.handleClick}>\n        <span>{this.props.index + 1}.</span>{\" \"}\n        <span className={completeCond}>{this.props.item}</span>\n      </span>\n    ) : (\n      <span className=\"editing\">\n        {this.props.index + 1}.&nbsp;&nbsp;\n        <form onSubmit={this.handleEditSubmit}>\n          <input\n            className=\"editingForm\"\n            onChange={this.handleChange}\n            type=\"text\"\n            id=\"todo Input Edit\"\n            name=\"item\"\n            value={this.state.item}\n            placeholder=\"Edit Item\"\n          ></input>\n        </form>\n      </span>\n    )\n    const userInputLabel = <label htmlFor=\"todo Input Edit\"></label>\n    const removeButton = (\n      <RemoveButton handleDelete={this.props.handleDelete} id={this.props.id} />\n    )\n    const editButton = (\n      <EditButton\n        handleEditClick={this.props.handleEditClick}\n        id={this.props.id}\n      />\n    )\n\n    return (\n      <div className={`itemRow ${evenRowCond}`}>\n        {itemFormatted}\n        {editButton}\n        {removeButton}\n      </div>\n    )\n  }\n}\nexport default Edit\n"]},"metadata":{},"sourceType":"module"}